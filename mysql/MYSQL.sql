/*
SQLyog v10.2 
MySQL - 5.5.53 : Database - d_gist_9002
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`d_gist_9002` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `d_gist_9002`;

/*Table structure for table `t_gist` */

DROP TABLE IF EXISTS `t_gist`;

CREATE TABLE `t_gist` (
  `id` int(200) NOT NULL AUTO_INCREMENT,
  `update_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `title` varchar(200) DEFAULT NULL,
  `content` text,
  `group_id` int(200) DEFAULT NULL,
  `label_id` int(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=47 DEFAULT CHARSET=utf8;

/*Data for the table `t_gist` */

insert  into `t_gist`(`id`,`update_time`,`title`,`content`,`group_id`,`label_id`) values (1,'2018-12-09 18:10:51','瀑布流效果css','parent\n~~~\n.masonry { \n column-count: 5;\n column-gap: 0;\n }\n~~~\n\nchildren\n~~~\n.item { \nbreak-inside: avoid; \nbox-sizing: border-box; \npadding: 10px; \n}\n~~~',132,1),(3,'2018-12-09 18:10:52','string','string',0,1),(4,'2018-12-09 18:10:52','string','string',0,1),(5,'2018-12-09 18:10:53','string','string',0,1),(6,'2018-12-09 20:33:24','Connect','~~~\nrequire(\'knex\')({\n  client: \'pg\',\n  connection: \'postgres://user:pass@localhost:5432/dbname\'\n})\n~~~',133,13),(7,'2018-12-09 20:33:39','Create table','~~~\nknex.schema.createTable(\'user\', (table) => {\n  table.increments(\'id\')\n  table.string(\'name\')\n  table.integer(\'age\')\n})\n.then(() => ···)\n~~~',133,14),(8,'2018-12-09 20:33:57','Select','~~~\nknex(\'users\')\n  .where({ email: \'hi@example.com\' })\n  .then(rows => ···)\n~~~',133,15),(9,'2018-12-09 20:34:04','Update','~~~\nknex(\'users\')\n  .where({ id: 135 })\n  .update({ email: \'hi@example.com\' })\n~~~',133,15),(10,'2018-12-09 20:34:12','Migrations','~~~\nknex init\nknex migrate:make migration_name\nknex migrate:latest\nknex migrate:rollback\n~~~',133,14),(11,'2018-12-09 20:34:19','Insert','~~~\nknex(\'users\')\n  .insert({ email: \'hi@example.com\' })\n~~~',133,15),(12,'2018-12-09 20:34:25','Connect','~~~\npg	PostgreSQL\nmysql	MySQL or MariaDB\nsqlite3	Sqlite3\nmssql	MSSQL\nInstall any of these packages along with knex.\n~~~',133,13),(13,'2018-12-09 20:34:31','Connect via host','~~~\nvar knex = require(\'knex\')({\n  client: \'mysql\',\n  connection: {\n    host: \'127.0.0.1\',\n    user: \'your_database_user\',\n    password: \'your_database_password\',\n    database: \'myapp_test\'\n  },\n  pool: { min: 0, max: 7 }\n~~~',133,13),(14,'2018-12-09 20:34:37','Connect via URL','~~~\nvar pg = require(\'knex\')({\n  client: \'pg\',\n  connection: process.env.DATABASE_URL,\n  searchPath: \'knex,public\',\n  pool: { min: 0, max: 7 }\n})\n~~~',133,13),(16,'2018-12-09 20:42:02','init','~~~\n//html\n <router-view></router-view>\n \n<router-link to=\"/foo\">Go to Foo</router-link>\n <router-link to=\"/bar\">Go to Bar</router-link>\n\n// app.js\nconst routes = [\n  { path: \'/foo\', component: Foo },\n  { path: \'/bar\', component: Bar }\n]\n\nconst router = new VueRouter({\n  routes // (缩写) 相当于 routes: routes\n})\nVue.use(VueRouter)\nconst app = new Vue({\n  router\n}).$mount(\'#app\')\n~~~',134,16),(17,'2018-12-09 20:52:24','获取','~~~\nthis.$route.params\nthis.$route.query\n~~~',134,17),(18,'2018-12-09 20:54:18','event','~~~\nthis.$router.push(\"\")\nthis.$router.push({path:\"\"})\nthis.$router.push({\n  path:\"\",\n  query:{xx:xxx}\n})\n~~~',134,19),(19,'2018-12-09 21:08:37','init','~~~\nnew Vue({\n    router\n}).$mount(\'#app\')\n~~~',135,20),(20,'2018-12-09 21:09:51','clearNull','~~~\nexport function clearNull(str) {\n    return str.replace(/^\\s+|\\s+$/g, \"\");\n}\n~~~',136,21),(21,'2018-12-09 21:10:47','getUrlParams','~~~\nexport function getUrlParams(url) {\n    var url = url || location.search || location.hash;\n    var name, value;\n    var str = url; //取得整个地址栏\n    var num = str.indexOf(\"?\")\n    str = str.substr(num + 1); //取得所有参数   stringvar.substr(start [, length ]\n\n    var arr = str.split(\"&\"); //各个参数放到数组里\n    var params = {}\n    for (var i = 0; i < arr.length; i++) {\n        num = arr[i].indexOf(\"=\");\n        if (num > 0) {\n            name = arr[i].substring(0, num);\n            value = arr[i].substr(num + 1);\n            params[name] = value;\n        }\n    }\n    return params\n}\n~~~',137,22),(22,'2018-12-09 21:12:14','myalert','~~~\nconst MyAlert = {}\n\nMyAlert.loading = () => {\n   \n}\nMyAlert.clear = () => {\n \n}\nMyAlert.success = (str) => {\n  \n}\nMyAlert.fail = (str) => {\n\n}\nMyAlert.confirm = (str) => {\n}\nexport default MyAlert\n~~~',138,23),(23,'2018-12-09 21:12:35','loading','~~~\nMyAlert.loading = () => {\n    var index = layer.load(1, {\n        shade: [0.1, \'#fff\'] //0.1透明度的白色背景\n    });\n}\nMyAlert.clear = () => {\n    var index = layer.closeAll();\n}\n~~~',138,24),(24,'2018-12-09 21:12:53','success','~~~\nMyAlert.success = (str) => {\n    layer.msg(str, {time: 1500, icon: 6});\n}\n~~~',138,24),(25,'2018-12-09 21:13:11','FAIL','~~~\nMyAlert.fail = (str) => {\n    layer.msg(str, {time: 1500, icon: 5});\n}\n~~~',138,24),(26,'2018-12-09 21:13:28','confirm','~~~\nMyAlert.confirm = (str) => {\n    return new Promise(res => {\n        layer.confirm(str, {\n            btn: [\'确定\', \'取消\'] //按钮\n        }, function () {\n            return res(true)\n        }, function () {\n            return res(false)\n        });\n    })\n\n}\n~~~',138,24),(27,'2018-12-09 21:33:36','init','~~~\nimport map from \'lodash.map\'\nimport filter from \'lodash.filter\'\nimport groupBy from \'lodash.groupby\'\n\nexport const MyMap = map\nexport const MyFilter = filter\nexport const GroupBy = groupBy\n\n~~~',139,25),(28,'2018-12-09 21:34:17','get_height,get_width','~~~\nexport function get_body_height() {\n    var\n        body = document.body,\n        html = document.documentElement;\n\n    var height = Math.max(body.scrollHeight, body.offsetHeight,\n        html.clientHeight, html.scrollHeight, html.offsetHeight);\n    return height\n\n}\nexport function get_body_width() {\n    var\n        body = document.body,\n        html = document.documentElement;\n\n    var width = Math.max(body.scrollWidth, body.offsetWidth,\n        html.clientWidth, html.scrollWidth, html.offsetWidth);\n    return width\n\n}\n~~~',140,26),(29,'2018-12-09 21:35:49','header','~~~\n<template>\n    <div class=\"header\">\n        <div v-if=\"goBack\" class=\"goBack\" @click=\"goback1\">\n            <i class=\"el-icon-back\"></i>\n        </div>\n        <header class=\"center\">{{title}}</header>\n        <div class=\"headMargin\"></div>\n    </div>\n</template>\n\n<script>\n\n    import Lib from \'assets/js/Lib\';\n\n    import {XHeader} from \'vux\'\n\n    const MyHeader = {\n        data() {\n            return {}\n        },\n        components: {\n            XHeader\n        },\n        props: {\n            title: {\n                type: String,\n                default: \'导航\'\n            },\n            goBack: {\n                type: Boolean,\n                default: false\n            }\n        },\n        //实例初始化最之前，无法获取到data里的数据\n        beforeCreate() {\n\n\n        },\n        //在挂载开始之前被调用\n        beforeMount() {\n\n\n        },\n        //已成功挂载，相当ready()\n        mounted() {\n\n\n        },\n        //相关操作事件\n        methods: {\n            goback1() {\n                this.$router.back()\n            }\n        }\n    }\n    export default MyHeader\n</script>\n\n<style lang=\"less\" scoped>\n    .header {\n        padding-left: 20px;\n        color: #fff;\n        background: #409eff;\n        width: 100%;\n        top: 0;\n        display: flex;\n        height: 40px;\n        align-items: center;\n    }\n\n    .goBack {\n        cursor: pointer;\n    }\n\n    .center {\n        flex: 1;\n        text-align: center;\n    }\n\n    .headfix {\n        position: fixed !important;\n        z-index: 77;\n        width: 100%;\n        left: 0;\n        top: 0;\n    }\n\n    .headMargin {\n        clear: both;\n        height: 50px;\n    }\n\n</style>\n\n~~~',141,27),(30,'2018-12-09 21:37:03','base','~~~\n let converter = new showdown.Converter();\n            let text = this.$props.gist.content.toString();\n            this.html = converter.makeHtml(text);\n~~~',142,28),(31,'2018-12-09 21:38:20','init','~~~\n    <script src=\"https://cdn.bootcss.com/jquery/3.3.1/jquery.min.js\"></script>\n    <link href=\"https://cdn.bootcss.com/highlight.js/9.13.1/styles/atelier-cave-dark.min.css\" rel=\"stylesheet\">\n    <script src=\"https://cdn.bootcss.com/highlight.js/9.13.1/highlight.min.js\"></script>\n\n  import showdown from \"showdown\";\n~~~',142,28),(32,'2018-12-09 21:39:14','高光','~~~\nexport function hightLight(dom) {\n    $(dom).find(\'pre code\').each((i, block) => {\n        hljs.highlightBlock(block);\n    })\n\n}\n~~~',142,29),(33,'2018-12-09 21:40:51','showdown处理code','~~~\nvar converter = new showdown.Converter({\n    extensions: function () {\n        function htmlunencode(text) {\n            return (\n                text\n                    .replace(/&amp;/g, \'&\')\n                    .replace(/&lt;/g, \'<\')\n                    .replace(/&gt;/g, \'>\')\n            );\n        }\n\n        return [\n            {\n                type: \'output\',\n                filter: function (text, converter, options) {\n                    // use new shodown\'s regexp engine to conditionally parse codeblocks\n                    var left = \'<pre><code\\\\b[^>]*>\',\n                        right = \'</code></pre>\',\n                        flags = \'g\',\n                        replacement = function (wholeMatch, match, left, right) {\n                            // unescape match to prevent double escaping\n                            match = htmlunencode(match);\n                            // highlightBlock highlightAuto\n                            return left + hljs.highlightAuto(match).value + right;\n                        };\n                    return showdown.helper.replaceRecursiveRegExp(text, replacement, left, right, flags);\n                }\n            }\n        ];\n    }()\n});\n~~~\n\n~~~\nvar showdown = require(\'showdown\');\n~~~\n\n\n~~~\nexport function mkToHmtl(value) {\n    var val = converter.makeHtml(value);\n    return val\n}\n~~~',142,30),(34,'2018-12-09 21:42:11','index.js','~~~\nimport axios from \'axios\'\nimport Cookie from \'js-cookie\'\n\naxios.interceptors.request.use(\n    config => {\n        var userToken = Cookie.get(\'userToken\')\n        if (userToken) {\n            config.headers.userToken = userToken;\n        }\n        var imageToken = Cookie.get(\'imageToken\')\n        if (imageToken) {\n            config.headers.imageToken = imageToken;\n        }\n        return config\n    },\n    error => {\n        return Promise.reject(error)\n    }\n);\n~~~',143,31),(35,'2018-12-09 21:42:37','get','~~~\nexport function get_gists({groupId, title}) {\n    return axios.get(`${__API__}/gist/by-group-id`,\n        {\n            params: {\n                groupId, title\n            }\n        }).then(res => {\n        return res.data\n    });\n}\n\n~~~',143,32),(36,'2018-12-09 21:42:55','post','~~~\nexport function add_gist(gist) {\n    return axios.post(`${__API__}/gist`,\n        {\n            gist,\n        }).then(res => {\n        return res.data\n    });\n}\n~~~',143,32),(37,'2018-12-09 21:43:11','put','~~~\nexport function put_gists(gist) {\n    return axios.put(`${__API__}/gist/${gist.id}`,\n        {\n            gist,\n        }).then(res => {\n        return res.data\n    });\n}\n~~~',143,32),(38,'2018-12-09 21:43:26','delete','~~~\nexport function delete_gist(id) {\n    return axios.delete(`${__API__}/gist/${id}`,).then(res => {\n        return res.data\n    });\n}\n~~~',143,32),(39,'2018-12-10 17:07:35','随机整数','~~~\nfunction RandomNumber(min, max) {\n    return Math.round(Math.random() * (max - min)) + min;\n}\n~~~',145,33),(40,'2018-12-10 17:08:27','随机颜色','~~~\nvar getRandomColor = function(){\n  return \'#\'+(Math.random()*0xffffff<<0).toString(16);\n}\n~~~',145,34),(41,'2018-12-10 17:17:51','颜色列表','~~~\nvar colosr=[\n\"#8B0000\",\n\"#FF00FF\",\n\"#800080\",\n\"#CD5C5C\",\n\"#DAA520\",\n\"#006400\",\n\"#00008B\",\n\"#696969\",\n]\n~~~',146,35),(42,'2018-12-10 17:36:54','mysql安装','centos6 \n~~~\nStep1: 检测系统是否自带安装mysql\nyum list installed | grep mysql\n\n 删除系统自带的mysql及其依赖\n命令：\nyum -y remove mysql-libs.x86_64\n\n给CentOS添加rpm源，并且选择较新的源\n命令：\n\nwget dev.mysql.com/get/mysql-community-release-el6-5.noarch.rpm\n\nyum localinstall mysql-community-release-el6-5.noarch.rpm\n\nyum repolist all | grep mysql\n\nyum-config-manager --disable mysql55-community\n\nyum-config-manager --disable mysql56-community\n\nyum-config-manager --enable mysql57-community-dmr\n\nyum repolist enabled | grep mysql\n\n安装mysql 服务器\n yum install mysql-community-server\n\n 启动mysql\n service mysqld start\n~~~\n\n##初始化 设置\n~~~\nmysql_secure_installation\n~~~',147,37),(43,'2018-12-10 17:45:15','连接mysql','##查看缓存密码\n~~~\ncat /var/log/mysqld.log\n~~~\n## 修改密码\n~~~\nupdate user set password = password(\'XXX\') where user = root;\n\nmysqladmin -u用户名 -p旧密码 password 新密码\nmysqladmin -u root  -password 12liumingtai\n注：因为开始时root没有密码，所以-p旧密码一项就可以省略了。\n~~~',147,37),(44,'2018-12-10 17:51:38','增加新用户','~~~\ngrant select on 数据库.* to 用户名@登录主机 identified by \"密码\"\n\ngrant select,insert,update,delete on *.* to root@\"%\" Identified by \"XXX\";\n~~~',147,37),(45,'2018-12-10 17:36:19','登录','~~~\n mysql -h主机地址 -u用户名 －p用户密码\nmysql -h xxx.xxxx.xxxx.xxxx -u root -p \n~~~',147,37),(46,'2018-12-10 17:43:47','查看日记','~~~\ncat /var/log/mysqld.log\n~~~',147,37);

/*Table structure for table `t_group` */

DROP TABLE IF EXISTS `t_group`;

CREATE TABLE `t_group` (
  `id` int(255) NOT NULL AUTO_INCREMENT,
  `update_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `name` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=148 DEFAULT CHARSET=utf8;

/*Data for the table `t_group` */

insert  into `t_group`(`id`,`update_time`,`name`) values (132,'2018-12-04 18:58:11','css布局'),(133,'2018-12-04 10:58:01','knex'),(134,'2018-12-08 21:40:19','vue-router'),(135,'2018-12-09 05:40:25','vue'),(136,'2018-12-09 05:40:32','string'),(137,'2018-12-09 05:40:36','url'),(138,'2018-12-09 05:40:41','alert'),(139,'2018-12-09 05:41:13','lodash'),(140,'2018-12-09 05:41:17','dom'),(141,'2018-12-09 05:41:45','ui'),(142,'2018-12-09 05:44:04','markdown'),(143,'2018-12-09 21:41:46','axios'),(144,'2018-12-09 21:44:34','webpack'),(145,'2018-12-10 17:06:07','random'),(146,'2018-12-10 17:15:54','css 颜色'),(147,'2018-12-10 17:19:31','linux');

/*Table structure for table `t_label` */

DROP TABLE IF EXISTS `t_label`;

CREATE TABLE `t_label` (
  `id` int(200) NOT NULL AUTO_INCREMENT,
  `name` varchar(200) DEFAULT NULL,
  `group_id` int(200) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=38 DEFAULT CHARSET=utf8;

/*Data for the table `t_label` */

insert  into `t_label`(`id`,`name`,`group_id`) values (1,'1',132),(13,'connect',133),(2,'1',133),(3,'2',133),(4,'3',133),(5,'4',133),(6,'5',133),(7,'6',133),(8,'7',133),(9,'9',133),(10,'knex',133),(11,'10',133),(12,'knex1',133),(14,'init',133),(15,'base',133),(16,'init',134),(17,'获取',134),(20,'init',135),(19,'event',134),(21,'base',136),(22,'base',137),(23,'base',138),(24,'event',138),(25,'init',139),(26,'base',140),(27,'header',141),(28,'base',142),(29,'hightlight',142),(30,'showdown_code',142),(31,'init',143),(32,'基本用法',143),(33,'数字',145),(34,'颜色',145),(35,'颜色列表',146),(36,'node',147),(37,'mysql',147);

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
